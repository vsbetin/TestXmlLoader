// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using XmlTest.EntityFramework;

namespace XmlTest.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190924182548_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("XmlTest.EntityFramework.Models.BillingAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<long>("OrderId");

                    b.Property<string>("Street");

                    b.Property<string>("StreetNumber");

                    b.Property<int>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("BillingAddresses");
                });

            modelBuilder.Entity("XmlTest.EntityFramework.Models.Order", b =>
                {
                    b.Property<long>("Oxid")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("OrderDate");

                    b.Property<int>("Status");

                    b.HasKey("Oxid");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("XmlTest.EntityFramework.Models.OrderArticle", b =>
                {
                    b.Property<string>("ArtNum");

                    b.Property<int>("Amount");

                    b.Property<decimal>("BrutPrice");

                    b.Property<long>("OrderId");

                    b.Property<string>("Title");

                    b.HasKey("ArtNum");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderArticles");
                });

            modelBuilder.Entity("XmlTest.EntityFramework.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("MethodName");

                    b.Property<long>("OrderId");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("XmlTest.EntityFramework.Models.BillingAddress", b =>
                {
                    b.HasOne("XmlTest.EntityFramework.Models.Order", "Order")
                        .WithOne("BillingAddress")
                        .HasForeignKey("XmlTest.EntityFramework.Models.BillingAddress", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("XmlTest.EntityFramework.Models.OrderArticle", b =>
                {
                    b.HasOne("XmlTest.EntityFramework.Models.Order", "Order")
                        .WithMany("Articles")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("XmlTest.EntityFramework.Models.Payment", b =>
                {
                    b.HasOne("XmlTest.EntityFramework.Models.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
